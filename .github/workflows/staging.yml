name: Deploy to Staging

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: [self-hosted]
    environment: staging
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deployment.key
          chmod 600 ~/.ssh/deployment.key
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          sudo apt-get install sshpass

      - name: Test SSH Connection
        run: |
          ssh -i ~/.ssh/deployment.key -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'SSH connection successful'"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy using Docker Compose
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
          cd ~/staging/Controlroom && \
          docker-compose pull && \
          docker-compose up -d"

      - name: Check deployment status
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
          docker-compose ps -q | xargs docker inspect -f '{{ if not .State.Running }}{{ .Name }} not running{{ end }}' | grep -v '^$'"

      - name: Rollback on failure
        if: failure()  # This will trigger the rollback if any of the previous steps fail
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
          cd ~/staging/Controlroom && \
          docker-compose down && \
          docker-compose up -d --no-deps --build consumer logstash kibana elasticsearch"
